/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        hm: homewrow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        copy_ {
            bindings = <&kp LC(LS(C))>;
            key-positions = <1 2>;
        };

        paste_ {
            bindings = <&kp LC(LS(V))>;
            key-positions = <3 4>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <17 18>;
        };

        all {
            bindings = <&kp LC(A)>;
            key-positions = <25 13>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <25 14>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <25 27>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <25 28>;
        };

        left_delete {
            bindings = <&kp DEL>;
            key-positions = <4 5>;
        };

        left_bspc {
            bindings = <&kp BSPC>;
            key-positions = <17 16>;
        };

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <29 28>;
        };

        toggle_mouse { 
          bindings = <&tog 4>;
          key-positions = <33 34 35>;
        };

        bspc_del {
            bindings = <&kp DEL>;
            key-positions = <11 10>;
        };

        prev_tab {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <8 7>;
        };

        next_tab {
            bindings = <&kp LC(TAB)>;
            key-positions = <10 9>;
        };

        close_tab {
            bindings = <&kp LC(W)>;
            key-positions = <8 9>;
        };

        recent_tab {
            bindings = <&kp LC(LS(T))>;
            key-positions = <20 21>;
        };

        new_tab {
            bindings = <&kp LC(T)>;
            key-positions = <32 33>;
        };

        firefox_incognito {
            bindings = <&kp LC(LS(P))>;
            key-positions = <6 7>;
        };

        chrome_incognito {
            bindings = <&kp LC(LS(N))>;
            key-positions = <18 19>;
        };

        new_window {
            bindings = <&kp LC(N)>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            display-name = "Qwerty";
            bindings = <
&kp TAB    &kp Q        &kp W       &kp E       &kp R  &kp T              &kp Y            &kp U  &kp I       &kp O       &kp P           &kp BSPC
&kp ESC    &hm LSHFT A  &hm LALT S  &hm LGUI D  &kp F  &kp G              &kp H            &kp J  &hm RGUI K  &hm RALT L  &hm RSHFT SEMI  &hm RCTRL SQT
&kp LCTRL  &kp Z        &kp X       &kp C       &kp V  &kp B              &kp N            &kp M  &kp COMMA   &kp DOT     &kp FSLH        &lt 5 ENTER
                                    &kp LGUI    &mo 6  &mt LSHFT SPACE    &mt RSHFT ENTER  &mo 7  &kp RALT
            >;
        };

        colemak {
            display-name = "Colemak";
            bindings = <
&trans  &kp Q        &kp W       &kp F       &kp P   &kp G     &kp J   &kp L   &kp U       &kp Y       &kp SEMI     &trans
&trans  &hm LSHFT A  &hm LALT R  &hm LGUI S  &kp T   &kp D     &kp H   &kp N   &hm RGUI E  &hm RALT I  &hm RSHFT O  &hm RCTRL SQT
&trans  &kp Z        &kp X       &kp C       &kp V   &kp B     &kp K   &kp M   &kp COMMA   &kp DOT     &kp FSLH     &trans
                                 &trans      &trans  &trans    &trans  &trans  &trans
            >;
        };

        dvorak {
            display-name = "Dvorak";
            bindings = <
&trans  &kp SQT      &kp COMMA   &kp DOT     &kp P   &kp Y     &kp F   &kp G   &kp C       &kp R       &kp L        &trans
&trans  &hm LSHFT A  &hm LALT O  &hm LGUI E  &kp U   &kp I     &kp D   &kp H   &hm RGUI T  &hm RALT N  &hm RSHFT S  &hm RCTRL MINUS
&trans  &kp SEMI     &kp Q       &kp J       &kp K   &kp X     &kp B   &kp M   &kp W       &kp V       &kp Z        &trans
                                 &trans      &trans  &trans    &trans  &trans  &trans
            >;
        };

        num {
            display-name = "Num";
            bindings = <
&trans  &none      &none      &kp PLUS              &kp MINUS              &none          &kp KP_PLUS      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SUBTRACT  &trans
&trans  &kp COMMA  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOT        &kp KP_EQUAL     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &kp KP_DOT
&trans  &none      &kp CARET  &kp ASTRK             &kp SLASH              &kp PERCENT    &kp KP_MULTIPLY  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DIVIDE    &lt 5 PERCENT
                              &trans                &trans                 &trans         &kp KP_ENTER     &trans           &trans
            >;
        };

        mouse {
            display-name = "Mouse";
            bindings = <
&trans  &none  &none     &none     &none      &none     &none   &none   &none     &none     &none   &trans
&trans  &none  &none     &kp UP    &none      &none     &none   &none   &none     &none     &none   &trans
&trans  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none     &none   &none   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT
                         &trans    &trans     &trans    &trans  &trans  &trans
            >;
        };

        f-keys {
            display-name = "F-keys";
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &kp PSCRN        &none   &none       &kp INS       &kp HOME      &kp PG_UP
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &kp PAUSE_BREAK  &none   &none       &kp DEL       &kp END       &kp PG_DN
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp KP_NUM       &none   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans
                          &trans   &trans   &trans     &trans           &trans  &trans
            >;
        };

        lower {
            display-name = "Lower";
            bindings = <
&kp GRAVE  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5    &kp N6    &kp N7    &kp N8    &kp N9     &kp N0     &trans
&trans     &kp UNDER  &kp COMMA  &kp UP    &kp DOT    &none     &kp BSLH  &kp LBKT  &kp RBKT  &kp MINUS  &kp EQUAL  &kp FSLH
&trans     &none      &kp LEFT   &kp DOWN  &kp RIGHT  &none     &kp PIPE  &kp LPAR  &kp RPAR  &kp LT     &kp GT     &trans
                                 &trans    &trans     &trans    &trans    &trans    &trans
            >;
        };

        raise {
            display-name = "Raise";
            bindings = <
&kp TILDE  &kp EXCL  &kp AT_SIGN  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&trans     &none     &kp LT       &kp FSLH  &kp GT    &none        &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp FSLH
&trans     &none     &none        &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp QMARK
                                  &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        adjust {
            display-name = "Adjust";
            bindings = <
&bt BT_CLR_ALL  &none          &none          &none          &none          &none            &none  &none   &none  &none  &none  &none
&bt BT_CLR      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &none  &to 0   &to 1  &to 2  &to 3  &none
&none           &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &none  &none   &none  &none  &none  &none
                                              &none          &trans         &none            &none  &trans  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <6 7>;
            then-layer = <8>;
        };
    };
};

